from appium.webdriver.common.appiumby import AppiumBy
from selenium.common import TimeoutException
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait

from utils.utils import select_mode
from utils.utils import wait_and_click, perform_login, select_profile, click_get_started_button


# Click on 'Permission Allow' button
def test_handle_allow_button(driver):
    allow_button_xpath = ('//android.widget.Button[@resource-id="com.android.permissioncontroller:id'
                          '/permission_allow_button"]')
    wait_and_click(driver, AppiumBy.XPATH, allow_button_xpath)

    # Click on 'Get Started' button
    click_get_started_button(driver)


# Perform login
def test_login(driver):
    # User sign in
    perform_login(driver)


# Profile selection
def test_select_profile(driver):
    # Select user's profile
    select_profile(driver, 'Franklin')


# Click on 'Singing Classes' tab
def test_click_on_singing_classes(driver):
    singing_classes_locator = '//android.widget.ImageView[contains(@content-desc,"Singing Classes")]'
    wait_and_click(driver, AppiumBy.XPATH, value=singing_classes_locator)


# Module selection
def test_select_module(driver):
    # Select Riyaaz module
    select_mode(driver, 'Riyaaz')


# Select workout type
workout_type = 'Range'


# Scroll to a selected workout type
def test_scroll_to_specific_workout(driver):

    # Locator for the list of workouts
    workout_list_locator = 'new UiSelector().className("android.view.View").instance(7)'

    # Locator for the specific workout we're looking for
    workout_locator = f'//android.view.View[@content-desc="{workout_type}"]'
    max_attempts = 3
    attempts = 0

    while attempts < max_attempts:
        try:
            # Wait for the specific workout to be visible
            element = WebDriverWait(driver, 5).until(
                EC.presence_of_element_located((AppiumBy.XPATH, workout_locator))
            )
            print(f"'{workout_type}' found. Stopping scroll.")
            return element
        except TimeoutException:
            print(f"'{workout_type}' not found. Continuing to scroll.")

        # Find the container element to scroll within
        container = driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, value=workout_list_locator)
        container_rect = container.rect

        # Calculate scroll coordinates
        start_x = container_rect['x'] + container_rect['width'] // 2
        start_y = container_rect['y'] + container_rect['height'] * 0.8
        end_y = container_rect['y'] + container_rect['height'] * 0.2

        # Perform the scroll action
        driver.swipe(start_x, start_y, start_x, end_y, 1000)
        attempts += 1

    print(f"'{workout_type}' not found after maximum number of attempts.")
    return None


def test_perform_workout(driver):
    print(f"Attempting to scroll within the {workout_type} workout container")

    # Locator for the specific workout container
    container_locator = f'//android.view.View[@content-desc="{workout_type}"]/android.view.View/android.view.View'

    try:
        # Wait for the workout container to be visible
        container = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((AppiumBy.XPATH, container_locator))
        )
    except TimeoutException:
        print(f"Could not find the container for {workout_type}")
        return

    # Calculate swipe coordinates within the container
    container_rect = container.rect
    start_x = container_rect['x'] + container_rect['width'] * 0.9
    end_x = container_rect['x'] + container_rect['width'] * 0.1
    y = container_rect['y'] + container_rect['height'] * 0.5

    # Perform horizontal swipes within the workout container
    for _ in range(3):
        driver.swipe(start_x, y, end_x, y, 500)

    print(f"Completed scrolling within the {workout_type} workout container")


